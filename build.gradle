/*
 * This build file was auto generated by running the Gradle 'init' task
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */
buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath("com.wiredforcode:gradle-heroku-plugin:1.0.0")
        classpath("org.springframework:springloaded:1.2.2.RELEASE")
    }
    repositories {
        jcenter()
        maven {
            name 'Bintray Gradle Plugins'
            url 'http://dl.bintray.com/vermeulen-mp/gradle-plugins'
        }
    }
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'heroku'

jar {
  baseName = 'machinosc'
  version =  '0.0.1'
}

repositories {
    jcenter()
}

defaultTasks 'build'

// In this section you declare the dependencies for your production and test code
dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.retrofit:converter-simplexml:1.9.0'
    compile 'commons-io:commons-io:2.4'
    compile 'com.google.code.gson:gson:2.3.1'
    compile ('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax:stax-api'
        exclude module: 'stax:stax'
        exclude module: 'xpp3:xpp3'
    }
    compile 'org.slf4j:slf4j-api:1.7.12'

    runtime 'net.sourceforge.nekohtml:nekohtml:1.9.21'
    runtime 'org.flywaydb:flyway-core:3.2.1'
    runtime 'com.h2database:h2:1.4.+'
    runtime 'org.postgresql:postgresql:9.4-1201-jdbc4'

    testCompile 'junit:junit:4.12'
}

bootRun {
    // specify active profile by
    // `gradle bootRun -PactiveProfile="your-profile-name"`
    //   or "development" as default
    def profileName = project.hasProperty("activeProfile") ? project.activeProfile : "development"

    jvmArgs = ["-Dspring.profiles.active=$profileName"]
}

if(file('herokuSettings.gradle').exists()) apply from: 'herokuSettings.gradle'

task stage(dependsOn: 'build')
