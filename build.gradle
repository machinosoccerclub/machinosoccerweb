/*
 * This build file was auto generated by running the Gradle 'init' task
 */
buildscript {
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
    classpath("com.wiredforcode:gradle-heroku-plugin:1.0.0")
    classpath("org.springframework:springloaded:1.2.2.RELEASE")
  }
  repositories {
    jcenter()
    maven {
      name 'Bintray Gradle Plugins'
      url 'http://dl.bintray.com/vermeulen-mp/gradle-plugins'
    }
  }
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'heroku'

repositories {
  jcenter()
}

defaultTasks 'build'

// In this section you declare the dependencies for your production and test code
dependencies {
  compile "org.springframework.boot:spring-boot-starter-web"
  compile "org.springframework.boot:spring-boot-starter-thymeleaf"
  compile "org.springframework.boot:spring-boot-starter-data-jpa"
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'com.squareup.retrofit:converter-simplexml:1.9.0'
  compile 'commons-io:commons-io:2.4'
  compile 'com.google.code.gson:gson:2.3.1'
  compile ('org.simpleframework:simple-xml:2.7.1') {
    exclude module: 'stax:stax-api'
    exclude module: 'stax:stax'
    exclude module: 'xpp3:xpp3'
  }
  compile 'org.slf4j:slf4j-api:1.7.12'

  compile 'org.webjars:jquery:2.1.4'
  compile 'org.webjars:bootstrap:3.3.4'
  compile 'org.webjars.bower:fuelux:3.10.0'

  runtime 'net.sourceforge.nekohtml:nekohtml:1.9.21'
  runtime 'org.flywaydb:flyway-core:3.2.1'
  runtime 'com.h2database:h2:1.4.188'
  runtime 'org.postgresql:postgresql:9.4-1202-jdbc42'

  testCompile 'junit:junit:4.12'
}

bootRun {
  // specify active profile by
  // `gradle bootRun -PactiveProfile="your-profile-name"`
  //   or "development" as default
  def profileName = project.hasProperty("activeProfile") ? project.activeProfile : "development"

  jvmArgs = ["-Dspring.profiles.active=$profileName", "-Dfile.encoding=UTF8", "-Xmx512m", "-Xss512k"]
}

idea {
  module {
    inheritOutputDirs = false
    outputDir = file("$buildDir/classes/main/")
  }
}

if(file('herokuSettings.gradle').exists()) apply from: 'herokuSettings.gradle'

// `stage` is to deploy the application on the heroku dyno.
task stage {
  dependsOn 'clean'    // clean rebuild
  dependsOn 'build'

  mustRunAfter 'clean'
}
